---
# tasks file for setup-mysql-backups

- name: "Check is Ubuntu Firewall installed"
  shell: command -v ufw >/dev/null 2>&1
  register: is_ufw_installed
  ignore_errors: yes

- debug: msg="{{ is_ufw_installed.rc }}" 
- debug: var=is_ufw_installed

- name: "Open port 3306 in Ubuntu Firewall to allow external MySQL connections"
  ufw: 
    rule: allow
    port: 3306
  when: is_ufw_installed.rc == 0

# Moving this task into the Percona / MySQL DB role - commenting it out for now
#- name: "Changing MySQL daemon config bind address to allow connections from anywhere"
#  ini_file: 
#    path: /etc/mysql/mysql.conf.d/mysqld.cnf
#    section: mysqld
#    option: bind-address
#    value: 0.0.0.0
#  notify: 
#  - restart-mysql-server

- name: "Check if DigitalOcean LAMP image was used and thus MySQL is already setup"
  stat:
    path: /root/.digitalocean_password
  register: stat_result

- block:
    - name: Slurp Root MySQL password from file on remote server
      slurp:
        src: /root/.digitalocean_password
      register: slurpfile

    - debug: msg="MySQL root password is {{ slurpfile['content'] | b64decode }}"

    - name: "Retrieving MySQL root password"
      shell: cat /root/.digitalocean_password
      register: data

    - debug:
        msg: "MySQL root password is {{ data.stdout | regex_search('((?:[a-z0-9]+[a-z0-9]*[0-9]+[a-z0-9]*))') }}"

    - name: "Setting a 'fact' / variable from the filtered registered variable into the mysql_root_password variable"
      set_fact:
        mysql_root_password: "{{ data.stdout | regex_search('((?:[a-z0-9]+[a-z0-9]*[0-9]+[a-z0-9]*))') }}"

    - debug:
        msg: "MySQL PW =  {{ mysql_root_password }}"

  # Only execute if a DigitalOcean Lamp Stack was used 
  when: stat_result.stat.exists == True 

- name: "Deploying DB backup script to server"
  template:
    src: ../templates/backup_mysql_databases.sh
    dest: /root/backup_mysql_databases.sh
    owner: root
    group: root
    mode: 0750

# Moving this task into a Common Type role - commenting it out for now  
#- name: 'Set Timezone to UTC'
# timezone:
#   name: Etc/UTC

- name: 'Setup cron job to automatically backup MySQL DB every night'
  cron:
    name: "Execute DB Backup"
    minute: "0"
    hour: "5"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/root/backup_mysql_databases.sh > /dev/null 2>&1"

